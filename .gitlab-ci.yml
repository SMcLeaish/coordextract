include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - pre
  - test
  - sast

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip_cache"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .venv/
    - .pip_cache/

prepare_environment:
  image: python:3.11
  stage: pre
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - pip install -e .
  cache:
    policy: push
  only:
    - merge_requests

quality:
  image: python:3.11
  stage: test
  script: 
    - source .venv/bin/activate
    - mypy --strict mgrs_processing --junit-xml mypy.xml
    - pylint mgrs_processing
  artifacts:
    reports:
      junit: mypy.xml
  allow_failure: false
  only:
    - merge_requests

pytest:
  image: python:3.11
  stage: test
  script:
    - source .venv/bin/activate
    - pytest --cov=mgrs_processing --cov-report=xml:cobertura_coverage.xml --cov-report=term --junitxml=pytest.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      junit: pytest.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura_coverage.xml
  allow_failure: false
  only:
    - merge_requests
  workflow:
      rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
